from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
import datetime
import sqlite3
import config
from apscheduler.schedulers.background import BackgroundScheduler

scheduler = BackgroundScheduler()

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è Application
application = None

async def start(update: Update, context):
    chat_id = update.effective_chat.id
    await update.message.reply_text("–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è!")
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å chat_id –≤ –ë–î, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ

def send_reminders():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ –¥–µ–Ω—å –¥–æ –≤–∏–∑–∏—Ç–∞"""
    tomorrow = (datetime.date.today() + datetime.timedelta(days=1)).isoformat()
    conn = sqlite3.connect('bookings.db')
    conn.row_factory = sqlite3.Row
    cur = conn.cursor()
    cur.execute("""
        SELECT b.*, m.name as master_name, s.name as service_name 
        FROM bookings b
        JOIN masters m ON b.master_id = m.id
        JOIN services s ON b.service_id = s.id
        WHERE b.date = ? AND b.telegram_notify = 1
    """, (tomorrow,))
    bookings = [dict(row) for row in cur.fetchall()]
    conn.close()

    for book in bookings:
        message = f"""
üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!

–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã –∫ {book['master_name']} –∑–∞–≤—Ç—Ä–∞ –≤ {book['time']}.
–£—Å–ª—É–≥–∞: {book['service_name']}

–ñ–¥—ë–º –≤–∞—Å!
        """.strip()
        try:
            application.bot.send_message(chat_id=book['chat_id'], text=message)
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç {book['chat_id']}: {e}")

def start_bot():
    """–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ"""
    if not config.TELEGRAM_TOKEN or config.TELEGRAM_TOKEN == "TOKEN_TELEGRAMM":
        print("–¢–æ–∫–µ–Ω Telegram –Ω–µ –∑–∞–¥–∞–Ω ‚Äî –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω.")
        return

    global application
    application = Application.builder().token(config.TELEGRAM_TOKEN).build()

    application.add_handler(CommandHandler("start", start))

    # –ó–∞–ø—É—Å–∫–∞–µ–º polling –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ
    from threading import Thread
    thread = Thread(target=application.run_polling, daemon=True)
    thread.start()
    print("Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω.")

    # –ù–∞–∑–Ω–∞—á–∞–µ–º –∑–∞–¥–∞—á—É –Ω–∞ 9:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
    scheduler.add_job(send_reminders, 'cron', hour=9, minute=0)
    scheduler.start()
