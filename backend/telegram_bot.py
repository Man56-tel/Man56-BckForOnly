import telegram
from telegram.ext import Updater, CommandHandler
import datetime
import database as db
import config
import threading
from apscheduler.schedulers.background import BackgroundScheduler

bot = telegram.Bot(token=config.TELEGRAM_TOKEN)
scheduler = BackgroundScheduler()

def start(update, context):
    chat_id = update.effective_chat.id
    context.bot.send_message(chat_id=chat_id, text="–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è!")
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id –∫–ª–∏–µ–Ω—Ç–∞, –µ—Å–ª–∏ –æ–Ω –¥–∞–ª —Å–æ–≥–ª–∞—Å–∏–µ
    conn = sqlite3.connect('bookings.db')
    cur = conn.cursor()
    # –≠—Ç–æ —É–ø—Ä–æ—â—ë–Ω–Ω–æ ‚Äî –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å –∫ –∫–ª–∏–µ–Ω—Ç—É
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É client_notifications(chat_id, phone_or_name)
    conn.close()

def send_reminders():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ –¥–µ–Ω—å –¥–æ –≤–∏–∑–∏—Ç–∞"""
    tomorrow = (datetime.date.today() + datetime.timedelta(days=1)).isoformat()
    conn = sqlite3.connect('bookings.db')
    conn.row_factory = sqlite3.Row
    cur = conn.cursor()
    cur.execute("""
        SELECT b.*, m.name as master_name, s.name as service_name 
        FROM bookings b
        JOIN masters m ON b.master_id = m.id
        JOIN services s ON b.service_id = s.id
        WHERE b.date = ? AND b.telegram_notify = 1 AND b.chat_id IS NOT NULL
    """, (tomorrow,))
    bookings = [dict(row) for row in cur.fetchall()]
    conn.close()

    for book in bookings:
        message = f"""
üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!

–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã –∫ {book['master_name']} –∑–∞–≤—Ç—Ä–∞ –≤ {book['time']}.
–£—Å–ª—É–≥–∞: {book['service_name']}

–ñ–¥—ë–º –≤–∞—Å!
        """.strip()
        try:
            bot.send_message(chat_id=book['chat_id'], text=message)
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç {book['chat_id']}: {e}")

def start_bot():
    """–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ"""
    if not config.TELEGRAM_TOKEN or config.TELEGRAM_TOKEN == "TOKEN_TELEGRAMM":
        print("–¢–æ–∫–µ–Ω Telegram –Ω–µ –∑–∞–¥–∞–Ω ‚Äî –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω.")
        return

    updater = Updater(config.TELEGRAM_TOKEN, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    
    thread = threading.Thread(target=updater.start_polling, daemon=True)
    thread.start()
    print("Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω.")

    # –ó–∞–ø—É—Å–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00
    scheduler.add_job(send_reminders, 'cron', hour=9, minute=0)
    scheduler.start()